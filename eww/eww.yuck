
(defpoll uptime :interval "48h" "uptime --pretty | ./scripts/uptime.awk")
(defpoll bat :interval "10s" "cat /sys/class/power_supply/BAT1/capacity")
(defpoll date :interval "1h" "date +'%a, %d %b'")
(defpoll brightness :interval "1s" :initial 0 `brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}'`)
(defpoll mem :interval "10s" "./scripts/getram.sh")
(defpoll calendar_day :interval "20h" "date '+%d'")
(defpoll calendar_year :interval "20h" "date '+%Y'")
(defpoll volume :interval "1s" :initial 0 `pamixer --get-volume`)

(defwidget dashboard [] (box :orientation "v" 
    (box :class "info_box" :orientation "v" :space-evenly false

      (box :class "slider_box" :orientation "v" :vexpand false :hexpand false
        (box :space-evenly false
            (label :class "slider_icon" :text "")
            (scale :min 1 :max 101 :width 215 :class "brightness_slider" :value brightness :onchange "brightnessctl set {}%" :height 10)
        )
        (box :space-evenly false
          (label :class "slider_icon" :text "墳")
          (scale :min 1 :max 101 :width 215 :class "volume_slider" :value volume :onchange "pamixer --set-volume $(echo {} | sed 's/[.].*$//')")
        )
      )
  )
)
)

(defvar volume-level 50)
(defvar volume-muted false)

(defwidget system [] 
  (box :class "genwin" :vexpand "false" :hexpand "false" 
    (box :orientation "v" :spacing 0 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
      (box :class "mem_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
        (label :class "iconmem" :text "")
        (scale :min 0 :max 100 :value mem :active "false"))
      (box :class "bat_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
        (label :class "iconbat" :text "")
        (scale :min 0 :max 100 :value bat :active "false"))
      (box :class "slider_box" :orientation "v" :vexpand false :hexpand false
        (box :space-evenly false
          (label :class "iconbright" :text "")
          (scale :min 1 :max 101  :class "brightness_slider" :value brightness :onchange "brightnessctl set {}%" )
          )
        (box :space-evenly false
          (label :class "iconvol" :text "墳")
          (scale :min 1 :max 101  :class "volume_slider" :value volume :onchange "pamixer --set-volume $(echo {} | sed 's/[.].*$//')")
          )
        )
      )
    )
  )
(defvar bright-level 50)
(defvar bright-muted false)

(defwidget cal[]
  (box 
    :class "cal_widget"
    :width 200 
    :height 100
    (calendar :day calendar_day :year calendar_year)))

(defwidget user[]
    (box
        :orientation "v"
        :class "user_widget"
        :space-evenly true
        :width 210
        :height 82
        :valign "center"
        (label :text "Uptime")
        (label :text uptime :style "font-size: 16px;")))
(defwidget day []
    (box
        :class "clock_widget"
        :orientation "h"
        :width 210
        :height 82
        :valign "center"
        :halign "center"
        :space-evenly true
        :spacing 10
        (box
            :orientation "v"
            :hexpand false
            (label :class "date" :text date)
            )))
(defwindow dashboard
  :monitor 0
  :geometry (geometry 
  :height "100" 
  :width "215px"
  :x "10px"
  :y "10px"
  :anchor "top right")
  :stacking "bg"
  :class "dashboard"
  (box 
    :orientation "v"
    :space-evenly false 
    :class "window"
    (box 
      :orientation "h"
      :space-evenly false
      :class "window"
    (user)
    (day)
      )
    (system)
    (cal)
  )
  )
